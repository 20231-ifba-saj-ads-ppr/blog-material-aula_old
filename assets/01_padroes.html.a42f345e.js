import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as a,d as s}from"./app.b19947be.js";const i={},t=s('<h1 id="padroes-de-projetos-\u{1F6A7}" tabindex="-1"><a class="header-anchor" href="#padroes-de-projetos-\u{1F6A7}" aria-hidden="true">#</a> Padr\xF5es de Projetos \u{1F6A7}</h1><h2 id="introducao" tabindex="-1"><a class="header-anchor" href="#introducao" aria-hidden="true">#</a> Introdu\xE7\xE3o</h2><p>Os padr\xF5es de projeto s\xE3o solu\xE7\xF5es comuns para problemas recorrentes no desenvolvimento de software. Eles s\xE3o como plantas pr\xE9-fabricadas que podem ser personalizadas para resolver problemas espec\xEDficos de projeto de c\xF3digo. No entanto, um padr\xE3o n\xE3o \xE9 um peda\xE7o espec\xEDfico de c\xF3digo, mas sim um conceito geral para resolver um problema espec\xEDfico. \xC9 importante ressaltar que os padr\xF5es n\xE3o podem ser simplesmente copiados e colados em um programa, mas sim adaptados \xE0s necessidades de cada projeto.</p><h2 id="historia" tabindex="-1"><a class="header-anchor" href="#historia" aria-hidden="true">#</a> Hist\xF3ria</h2><p>A ideia de padr\xF5es foi apresentada por Christopher Alexander em 1977 no contexto de Arquitetura (de pr\xE9dios e cidades):</p><ul><li>Problemas semelhantes com solu\xE7\xF5es diferentes</li><li>Reinventando a Roda</li></ul><h2 id="conceito" tabindex="-1"><a class="header-anchor" href="#conceito" aria-hidden="true">#</a> Conceito</h2><p>Tamb\xE9m conhecidos como <em>Padr\xF5es de Desenho de Software OO</em> ou simplesmente como <em>Padr\xF5es.</em></p><div class="custom-container tip"><p class="custom-container-title">Defini\xE7\xE3o</p><p>Cada padr\xE3o descreve um problema que ocorre repetidas vezes em nosso ambiente, e ent\xE3o descreve o n\xFAcleo da solu\xE7\xE3o para aquele problema, de tal maneira que pode-se usar essa solu\xE7\xE3o milh\xF5es de vezes sem nunca faz\xEA-la da mesma forma duas vezes <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p></div><div class="custom-container tip"><p class="custom-container-title">Defini\xE7\xE3o</p><p>Os padr\xF5es de projeto s\xE3o descri\xE7\xF5es de objetos que se comunicam e classes que s\xE3o customizadas para resolver um problema gen\xE9rico de design em um contexto espec\xEDfico <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p></div><h3 id="outras-definicoes" tabindex="-1"><a class="header-anchor" href="#outras-definicoes" aria-hidden="true">#</a> Outras defini\xE7\xF5es</h3><ul><li>Maneira testada ou documentada de alcan\xE7ar um objetivo qualquer. <ul><li>Padr\xF5es s\xE3o comuns em v\xE1rias \xE1reas da engenharia</li></ul></li><li>Design Patterns, ou Padr\xF5es de Projeto <ul><li>Padr\xF5es para alcan\xE7ar objetivos na engenharia de software usando classes e m\xE9todos em linguagens orientadas a objeto</li><li>Inspirado em &quot;A Pattern Language&quot; de Christopher Alexander, sobre padr\xF5es de arquitetura de cidades, casas e pr\xE9dios</li><li>&quot;Design Patterns&quot; de Erich Gamma, John Vlissides, Ralph Jonhson e Richard Helm, conhecidos como &quot;The Gang of Four&quot;, ou GoF, descreve 23 padr\xF5es de projeto \xFAteis</li></ul></li></ul><h2 id="vantagens" tabindex="-1"><a class="header-anchor" href="#vantagens" aria-hidden="true">#</a> Vantagens</h2><p>Os padr\xF5es de projeto s\xE3o uma cole\xE7\xE3o de ferramentas que oferecem solu\xE7\xF5es testadas e aprovadas para problemas recorrentes no desenvolvimento de software. Mesmo que voc\xEA nunca tenha se deparado com esses problemas antes, o conhecimento dos padr\xF5es \xE9 extremamente valioso, pois eles ensinam como resolver v\xE1rios problemas usando princ\xEDpios de projeto orientado a objetos</p><ul><li>Aprender com a experi\xEAncia dos outros <ul><li>Identificar problemas comuns em engenharia de software e utilizar solu\xE7\xF5es testadas e bem documentadas</li><li>Utilizar solu\xE7\xF5es que t\xEAm um nome: facilita a comunica\xE7\xE3o, compreens\xE3o e documenta\xE7\xE3o</li></ul></li><li>Aprender a programar bem com orienta\xE7\xE3o a objetos <ul><li>Os 23 padr\xF5es de projeto &quot;cl\xE1ssicos&quot; utilizam as melhores pr\xE1ticas em OO para atingir os resultados desejados</li></ul></li><li>Desenvolver software de melhor qualidade <ul><li>Os padr\xF5es utilizam eficientemente polimorfismo, heran\xE7a, modularidade, composi\xE7\xE3o, abstra\xE7\xE3o para construir c\xF3digo reutiliz\xE1vel, eficiente, de alta coes\xE3o e baixo acoplamento</li></ul></li><li>Vocabul\xE1rio comum <ul><li>Faz o sistema ficar menos complexo ao permitir que se fale em um n\xEDvel mais alto de abstra\xE7\xE3o</li></ul></li><li>Ajuda na documenta\xE7\xE3o e na aprendizagem <ul><li>Conhecendo os padr\xF5es de projeto torna mais f\xE1cil a compreens\xE3o de sistemas existentes</li><li>&quot;As pessoas que est\xE3o aprendendo POO freq\xFCentemente reclamam que os sistemas com os quais trabalham usam heran\xE7a de forma convoluida e que \xE9 dif\xEDcil de seguir o fluxo de controle. Geralmente a causa disto \xE9 que eles n\xE3o entendem os padr\xF5es do sistema&quot; [GoF]</li><li>Aprender os padr\xF5es ajudam um novato a agir mais como um especialista</li></ul></li><li>Uma pr\xE1tica adjunta aos m\xE9todos existentes <ul><li>Mostram como usar pr\xE1ticas primitivas</li><li>Descrevem mais o porqu\xEA do design</li><li>Ajudam a converter um modelo de an\xE1lise em um modelo de implementa\xE7\xE3o</li></ul></li><li>Um alvo para refatoramento <ul><li>Captura as principais estruturas que resultam do refatoramento</li><li>Uso de patterns desde o in\xEDcio pode diminuir a necessidade de refatoramento</li></ul></li></ul><h2 id="elementos-de-um-padrao" tabindex="-1"><a class="header-anchor" href="#elementos-de-um-padrao" aria-hidden="true">#</a> Elementos de um padr\xE3o</h2><ul><li>Nome</li><li>Problema <ul><li>Quando aplicar o padr\xE3o, em que condi\xE7\xF5es?</li></ul></li><li>Solu\xE7\xE3o <ul><li>Descri\xE7\xE3o abstrata de um problema e como usar os elementos dispon\xEDveis (classes e objetos) para solucion\xE1-lo</li></ul></li><li>Consequ\xEAncias <ul><li>Custos e benef\xEDcios de se aplicar o padr\xE3o</li><li>Impacto na flexibilidade, extensibilidade, portabilidade e efici\xEAncia do sistema</li></ul></li></ul><table><caption>Tabela de padr\xF5es do Gof </caption><thead><tr><th colspan="2"></th><th colspan="3">Prop\xF3sito</th></tr></thead><tbody><tr><td colspan="2"></td><td>De cria\xE7\xE3o</td><td>Estrutural</td><td>Comportamental</td></tr><tr><td rowspan="2">Escopo</td><td>Classe</td><td><ul><li>Factory Method</li></ul></td><td><ul><li>Adapter(class)</li></ul></td><td><ul><li>Interperter</li><li>Template Method</li></ul></td></tr><tr><td>Objeto</td><td><ul><li>Abstract Factory</li><li>Builder</li><li>Prototype</li><li>Singleton</li></ul></td><td><ul><li>Adapter (object)</li><li>Bridge</li><li>Composite</li><li>Decorator</li><li>Facade</li><li>Flyweight</li><li>Proxy</li></ul></td><td><ul><li>Chain of Responsibility</li><li>Command</li><li>Interator</li><li>Mediator</li><li>Memento</li><li>Observer</li><li>State</li><li>Strategy</li><li>Visitor</li></ul></td></tr></tbody></table><figure><img src="https://www.plantuml.com/plantuml/svg/dLNBZjCm5DtxAwnkMCqFZD1e7Z0IYz4W2cme2oU-JIyuTh2TeVqSO864n98Ds_mOrx6THrCUOjF6zZdtUNnzwRomlgqLOvV3voFt7dKZhAYvGWt-q01lZ3g41MEb4ixnrQqelR47VWT-P-IA2yVJLjn9k6VQWst0qczcleIwKSB3b9htPjpLLU6y9QFPSW_DcsalOQzRL7BmyTmQRqBSQRr6NIdmHgVrbHJD6D6rHLbbw8sf6-FGv_KJA8qLv2cjoQsG-V1M7Ju2LZi_-jtdY5OtEu6Qcor_0Qunsc612drCeZyps_d9644jz510YdFY_WuapfOrQ6_IwhvmO1-6lDPU36cigMOUgkpZDLAAP8MT38IVdPrTZ9NWvrI5BMhKql2D5ZnK00LBWIxHhvo8qBBVfFXcq1Gq0Py-e4_G7JhA51omdF4nU2tKGmyES22rqgSK70Ey-zfzwRsa67hgO8WSwRQcHNIrHRKpZgKQBB13hXlIRTawHzWZovbwJah24eqEbZVwlecX_0379iB_Vyx95eGEL7GvkqyUIx4a3Q8aKZ10jveIZjvSzxqkZ3AE4xn6BN2Hsv_ekP-EZQZ7n8fIEq68RN8io-_lBi15A0h7vbCXSWTBKr4Qjw61HPtYVNbKPIpwsh3XyYwuTwqSjRIdOY21zXio5x-F8XuD_GFrgA1JxbL94Yz9q35P6w-T2DTEqgKAhJN5E_1BoQK15ofcST6DwUID7Jcg7V5Q4ZBVMlZGadyuIJgQhO65PAQ_We8C1Bzi6AwdEQ6bTCMgrWeRyjcAmf9EDrgIt6hw2iQ03IFvTrPGEzzzrYKIjVkfWzJZx4sz7FWdeNaKyZX3uj0ag92aUWo--f51KG6Nq82MtRTWmCMoAjYJ_jXKG6zsA2NejsHlcBECfPTaTfpUa_WtEudlmu9piNZK6ACZuDH3ciR2Uuj56tessQtxlgMj4csfw76-f4J24vx-Vm40" alt="uml diagram" loading="lazy"><figcaption>Rela\xE7\xE3o entre os padr\xF5es do Gof.</figcaption></figure><h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias" aria-hidden="true">#</a> Refer\xEAncias</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Alexander, Christopher. A pattern language: towns, buildings, construction. Oxford university press, 1977. <a href="#footnote-ref1" class="footnote-backref">\u21A9\uFE0E</a></p></li><li id="footnote2" class="footnote-item"><p>GAMMA, Erich. et al. Padr\xF5es de projetos: Solu\xE7\xF5es reutiliz\xE1veis de software orientados a objetos Bookman editora, 2009. <a href="#footnote-ref2" class="footnote-backref">\u21A9\uFE0E</a></p></li></ol></section>',22),r=[t];function l(d,n){return o(),a("div",null,r)}const m=e(i,[["render",l],["__file","01_padroes.html.vue"]]);export{m as default};
